services:
  ### MICROSERVICES
  bot_notifier:
    build: ./Microservices/bot_notifier
    container_name: bot_notifier
    depends_on:
      - telegram_bot
    volumes:
      - ./logs/bot_notifier:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  db_mqtt_adaptor:
    build: ./Microservices/db_mqtt_adaptor
    container_name: db_mqtt_adaptor
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/db_mqtt_adaptor:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  chart_service:
    build: ./Microservices/chart_service
    container_name: chart_service
    ports:
      - "5008:5008"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/chart_service:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  data_analysis:
    build: ./Microservices/data_analysis
    container_name: data_analysis
    ports:
      - "5003:5003"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/data_analysis:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  gemini:
    build: ./Microservices/gemini
    container_name: gemini
    ports:
      - "5007:5007"
    volumes:
      - ./logs/gemini:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  image_recognition:
    build: ./Microservices/image_recognition
    container_name: image_recognition
    ports:
      - "5006:5006"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/image_recognition:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  recommendation_service:
    build: ./Microservices/recommendation_service
    container_name: recommendation_service
    ports:
      - "5005:5005"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/recommendation_service:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  resource_catalog:
    build: ./Microservices/resource_catalog
    container_name: resource_catalog
    ports:
      - "5002:5002"
    depends_on:
      - service_catalog
    volumes:
      - ./logs/resource_catalog:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  service_catalog:
    build: ./Microservices/service_catalog
    container_name: service_catalog
    ports:
      - "5001:5001"
    volumes:
      - ./logs/service_catalog:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  telegram_bot:
    build: ./Microservices/telegram_bot
    container_name: telegram_bot
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/telegram_bot:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  thingspeak_adaptor:
    build: ./Microservices/thingspeak_adaptor
    container_name: thingspeak_adaptor
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/thingspeak_adaptor:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  vase_control:
    build: ./Microservices/vase_control
    container_name: vase_control
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/vase_control:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  device_connector:
    build: ./Microservices/device_connector
    container_name: device_connector
    ports:
      - "5004:5004"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/device_connector:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  telegram_groups:
    build: ./Microservices/telegram_groups
    container_name: telegram_groups
    ports:
      - "5011:5011"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/telegram_groups:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  plant_health:
    build: ./Microservices/plant_health
    container_name: plant_health
    ports:
      - "5009:5009"
    depends_on:
      - resource_catalog
    volumes:
      - ./logs/plant_health:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure

  admin_analytics:
    build: ./Microservices/admin_service
    container_name: admin_analytics
    ports:
      - "5010:5010"
    depends_on:
      - resource_catalog
      - service_catalog
    volumes:
      - ./logs/admin_analytics:/app/logs
    environment:
      - LOG_DIR=/app/logs
    restart: on-failure
